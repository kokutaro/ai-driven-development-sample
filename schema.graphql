# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AssignUserRoleInput {
  roleId: ID!
  userId: ID!
}

type Category {
  color: String!
  createdAt: DateTimeISO!
  id: ID!
  name: String!
  updatedAt: DateTimeISO!
  userId: String!
}

type CategoryStats {
  color: String!
  completed: Float!
  completionRate: Float!
  id: String!
  name: String!
  pending: Float!
  total: Float!
}

input CreateCategoryInput {
  color: String!
  name: String!
}

input CreateRoleInput {
  description: String
  displayName: String!
  name: String!
  permissionIds: [String!]
}

type DailyStats {
  completed: Float!
  created: Float!
  date: String!
  total: Float!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  assignUserRole(input: AssignUserRoleInput!): Boolean!
  createCategory(input: CreateCategoryInput!): Category!
  createRole(input: CreateRoleInput!): Role!
  createTodo(title: String!): Todo!
  deleteCategory(id: String!): Boolean!
  deleteTodo(id: String!): Boolean!
  removeUserRole(input: RemoveUserRoleInput!): Boolean!
  toggleTodoCompletion(id: String!): Todo!
  updateCategory(id: String!, input: UpdateCategoryInput!): Category!
  updateTodo(description: String, id: String!, isCompleted: Boolean, isImportant: Boolean, title: String): Todo!
}

type Permission {
  action: String!
  createdAt: DateTimeISO!
  description: String
  displayName: String!
  id: ID!
  isSystem: Boolean!
  name: String!
  resource: String!
  updatedAt: DateTimeISO!
}

type PermissionCheckResult {
  action: String
  hasPermission: Boolean!
  permission: String!
  reason: String
  resource: String
}

type Query {
  categories: [Category!]!
  checkPermission(permission: String!, userId: String!): PermissionCheckResult!
  checkRole(roleName: String!, userId: String!): RoleCheckResult!
  dashboardStats: TodoStats!
  hello: String!
  permissions: [Permission!]!
  roles: [Role!]!
  todoStats(filter: StatsFilter): TodoStats!
  todos: [Todo!]!
}

input RemoveUserRoleInput {
  roleId: ID!
  userId: ID!
}

type Role {
  createdAt: DateTimeISO!
  description: String
  displayName: String!
  id: ID!
  isSystem: Boolean!
  name: String!
  permissions: [Permission!]
  updatedAt: DateTimeISO!
}

type RoleCheckResult {
  hasRole: Boolean!
  reason: String
  roleName: String!
}

input StatsFilter {
  categoryId: String
  endDate: DateTimeISO
  period: StatsPeriod! = MONTH
  startDate: DateTimeISO
}

"""統計期間の指定"""
enum StatsPeriod {
  ALL_TIME
  MONTH
  TODAY
  WEEK
  YEAR
}

type SubTask {
  completed: Boolean!
  createdAt: DateTimeISO!
  id: ID!
  order: Float!
  title: String!
  todoId: String!
  updatedAt: DateTimeISO!
}

type Todo {
  category: Category
  categoryId: String
  completedAt: DateTimeISO
  completionRate: Float!
  createdAt: DateTimeISO!
  description: String
  dueDate: DateTimeISO
  id: ID!
  isCompleted: Boolean!
  isImportant: Boolean!
  isOverdue: Boolean!
  order: Float!
  priority: TodoPriority!
  status: TodoStatus!
  subTasks: [SubTask!]!
  title: String!
  updatedAt: DateTimeISO!
  userId: String!
}

"""Todoの優先度"""
enum TodoPriority {
  HIGH
  LOW
  MEDIUM
  URGENT
}

type TodoStats {
  assignedCount: Float!
  averageCompletionTime: Float!
  cancelled: Float!
  categories: [CategoryStats!]!
  completed: Float!
  completedCount: Float!
  completionRate: Float!
  dailyStats: [DailyStats!]!
  generatedAt: DateTimeISO!
  importantCount: Float!
  inProgress: Float!
  overdue: Float!
  overdueCount: Float!
  pending: Float!
  period: StatsPeriod!
  todayCount: Float!
  total: Float!
  totalCount: Float!
  upcomingCount: Float!
}

"""Todoのステータス"""
enum TodoStatus {
  CANCELLED
  COMPLETED
  IN_PROGRESS
  PENDING
}

input UpdateCategoryInput {
  color: String
  name: String
}